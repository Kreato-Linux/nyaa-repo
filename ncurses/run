#!/bin/sh
NAME="ncurses"
RELEASE="2"
VERSION="6.4"
SOURCES="https://ftp.gnu.org/gnu/ncurses/ncurses-$VERSION.tar.gz"
DEPENDS=""
SHA256SUM="6931283d9ac87c5073f30b6290c4c75f21632bb4fc3603ac8100812bed248159"
DESCRIPTION="ncurses library allows you to make TUI applications."

build() {
   if [ "$KPKG_ARCH" != "$(uname -m)" ]; then
	   extraArgs="--disable-stripping"
   fi
    # Taken from KISS Linux, LICENSE here https://github.com/kisslinux/repo/blob/master/LICENSE 
   kpkgConfigure $extraArgs \
    --prefix=/usr \
    --mandir=/usr/share/man \
    --enable-pc-files \
    --disable-rpath-hack \
    --with-pkg-config-libdir=/usr/lib/pkgconfig \
    --with-shared \
    --enable-widec \
    --without-ada \
    --without-tests \
    --without-debug \
    --with-cxx-shared

    make
}

package() {
    make DESTDIR="$ROOT" install
    mkdir -p "$ROOT/usr/lib"
    for lib in ncurses form panel menu; do
    	rm -f "$ROOT/usr/lib/lib${lib}.so"
   	    printf '%s\n' "INPUT(-l${lib}w)" > "$ROOT/usr/lib/lib${lib}.so"
    	chmod 755 "$ROOT/usr/lib/lib${lib}.so"
    	ln -sf "lib${lib}w.a" "$ROOT/usr/lib/lib${lib}.a"
     done

    # Some packages look for libcurses instead of libncurses when building.
    printf '%s\n' "INPUT(-lncursesw)" > "$ROOT/usr/lib/libcursesw.so"
    ln -s libncurses.so "$ROOT/usr/lib/libcurses.so"

    MAJOR_VERSION="$(echo $VERSION | cut -d '.' -f 1)"

    # tic and ticinfo functionality is built in by default
    # make sure that anything linking against it links against libncursesw.so instead
    for lib in tic tinfo tinfow; do
      printf "INPUT(-lncursesw)" > "$DESTDIR/usr/lib/lib${lib}.so"
      ln -s /usr/lib/lib${lib}.so /usr/lib/lib${lib}.so."$MAJOR_VERSION"
      ln -sv ncursesw.pc "$DESTDIR/usr/lib/pkgconfig/${lib}.pc"
    done
}
