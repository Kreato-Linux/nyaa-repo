#!/bin/sh
NAME="llvm"
RELEASE="1"
VERSION="16.0.6"
SOURCES="https://github.com/llvm/llvm-project/releases/download/llvmorg-$VERSION/llvm-project-$VERSION.src.tar.xz"
DEPENDS="cmake binutils gcc ninja"
SHA256SUM="ce5e71081d17ce9e86d7cbcfa28c4b04b9300f8fb7e78422b1feb6bc52c3028e  llvm-project-16.0.6.src.tar.xz"
DESCRIPTION="The LLVM Project is a collection of modular and reusable compiler and toolchain technologies."

build() {
    cmake -S llvm -B build -DCMAKE_BUILD_TYPE=Release \
        -DBUILD_SHARED_LIBS=1 \
        -DLLVM_ENABLE_RTTI=ON \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DLLVM_INSTALL_UTILS=ON \
        -DLLVM_INCLUDE_BENCHMARKS=OFF \
        -DLLVM_BINUTILS_INCDIR=/usr/include \
        -DLLVM_ENABLE_PROJECTS="lld;clang" \
        -DLLVM_ENABLE_RUNTIMES="libcxx;libcxxabi;compiler-rt" \
        -G Ninja
    ninja -C build -j$(nproc)
}

build_llvmstandalone() {
    # export CC just in case cmake tries to read from there for some reason
    export CC=clang
    cmake -S llvm -B build  \
        -DCMAKE_C_COMPILER=clang \
        -DCMAKE_CXX_COMPILER=clang++ \
        -DCMAKE_BUILD_TYPE=Release \
        -DBUILD_SHARED_LIBS=1 \
        -DLLVM_ENABLE_RTTI=ON \
        -DLLVM_INSTALL_BINUTILS_SYMLINKS=ON \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DLLVM_INCLUDE_BENCHMARKS=OFF \
        -DLLVM_BINUTILS_INCDIR=/usr/include \
        -DLLVM_ENABLE_PROJECTS="lld;clang" \
        -DLLVM_INSTALL_UTILS=ON \
        -DLIBCXX_CXX_ABI=libcxxabi \
        -DCOMPILER_RT_HAS_GCC_S_LIB=OFF \
        -DLLVM_ENABLE_LIBCXX=ON \
        -DLIBCXXABI_USE_COMPILER_RT=ON \
        -DLIBCXXABI_USE_LLVM_UNWINDER=ON \
        -DLIBCXX_USE_COMPILER_RT=ON \
        -DLIBUNWIND_USE_COMPILER_RT=ON \
        -DLIBUNWIND_USE_LLVM_UNWINDER=ON \
        -DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON \
        -DCOMPILER_RT_EXCLUDE_ATOMIC_BUILTIN=OFF \
        -DLIBCXX_HAS_ATOMIC_LIB=OFF \
        -DCLANG_DEFAULT_CXX_STDLIB=libc++ \
        -DCLANG_DEFAULT_RTLIB=compiler-rt \
        -DLIBCXX_HAS_GCC_LIB=OFF \
        -DLLVM_ENABLE_RUNTIMES="libunwind;libcxx;libcxxabi;compiler-rt" \
        -G Ninja
    ninja -C build -j$(nproc)
}

package() {    
    DESTDIR="$ROOT" ninja -C build install
}


