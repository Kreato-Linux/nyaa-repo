#!/bin/sh
NAME="gcc"
RELEASE="4"
VERSION="14.1.0"
BUILD_DEPENDS="gmake"
SOURCES="https://ftp.gnu.org/gnu/gcc/gcc-$VERSION/gcc-$VERSION.tar.xz"
DEPENDS="isl libzstd gmp mpc mpfr"
DEPENDS_GCC+="binutils linux-headers"
DEPENDS_AARCH64_LINUX_GNU_GCC+="aarch64-linux-gnu-linux-headers aarch64-linux-gnu-glibc aarch64-linux-gnu-binutils aarch64-linux-gnu-libxcrypt"
SHA256SUM="e283c654987afe3de9d8080bc0bd79534b5ca0d681a73a11ff2b5d3767426840"
DESCRIPTION="The GNU C Compiler"

common_build() {
    # Source: https://www.linuxfromscratch.org/lfs/view/development/chapter08/gcc.html
    case $(uname -m) in
        x86_64)
    sed -e '/m64=/s/lib64/lib/' \
        -i.orig gcc/config/i386/t-linux64
    ;;
    esac
    rm -rf build
    mkdir -v build
    cd       build
    
    prefix="/usr"
    if [ "$1" = "$(uname -m)-linux-gnu" ]; then
	    target="$(uname -m)-linux-gnu"
    else
	    target="$1"
	    #prefix="/usr/$target"
	    # Taken from arch
	    # https://gitlab.archlinux.org/archlinux/packaging/packages/aarch64-linux-gnu-gcc/-/blob/main/PKGBUILD?ref_type=heads
	    extraArgs="--libdir=/usr/lib --libexecdir=/usr/lib --with-local-prefix=/usr/$target --with-sysroot=/usr/$target --with-build-sysroot=/usr/$target --with-native-system-header-dir=/include --program-prefix=$target-"
    fi
    
    make distclean
    ../configure  $extraArgs                           \
        --enable-languages=c,c++                       \
        --enable-default-pie                           \
        --enable-default-ssp                           \
        --prefix="$prefix"                             \
	--host="$(uname -m)-linux-gnu"		       \
	--build="$(uname -m)-linux-gnu"		       \
	--target="$target"			       \
	--disable-fixincludes                          \
        --disable-multilib                             \
	--without-headers                              \
        --disable-nls                                  \
        --enable-initfini-array                        \
        --with-system-zlib        

	make MAKEINFO=true -j$(nproc)
}

build_aarch64_linux_gnu_gcc() {
	common_build "aarch64-linux-gnu"
}

build_gcc() {
    common_build "$KPKG_TARGET"
}

package_aarch64_linux_gnu_gcc() {
    cd build
    make MAKEINFO=true DESTDIR=$ROOT install-strip
    rm -rf $ROOT/source
    cat << EOF > $ROOT/usr/aarch64-linux-gnu/aarch64-linux-gnu-meson.txt
    [binaries]
c = 'aarch64-linux-gnu-gcc'
cpp = 'aarch64-linux-gnu-g++'
ar = 'aarch64-linux-gnu-ar'
strip = 'aarch64-linux-gnu-strip'

[host_machine]
system = 'linux'
cpu_family = 'aarch64'
cpu = 'aarch64'
endian = 'little'
EOF
cat << EOF > $ROOT/usr/aarch64-linux-gnu/aarch64-linux-gnu.cmake
# the name of the target operating system
set(CMAKE_SYSTEM_NAME Linux)

# which compilers to use for C and C++
set(CMAKE_C_COMPILER   aarch64-linux-gnu-gcc)
set(CMAKE_CXX_COMPILER aarch64-linux-gnu-g++)

# where is the target environment located
set(CMAKE_FIND_ROOT_PATH /usr/aarch64-linux-gnu)

# adjust the default behavior of the FIND_XXX() commands:
# search programs in the host environment
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)

# search headers and libraries in the target environment
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
EOF
    rm -rf "$ROOT/usr/share/info/dir"
}

package_gcc() {
    cd build
    make MAKEINFO=true DESTDIR=$ROOT install-strip
    rm -rf $ROOT/source
    rm -rf "$ROOT/usr/share/info/dir"
}
